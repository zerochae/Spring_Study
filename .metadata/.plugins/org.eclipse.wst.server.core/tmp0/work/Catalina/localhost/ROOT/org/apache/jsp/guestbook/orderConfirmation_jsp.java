/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.70
 * Generated at: 2021-10-26 07:12:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.guestbook;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.or.ddit.guestbook.vo.Product;
import java.util.ArrayList;
import java.net.URLDecoder;

public final class orderConfirmation_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1634195636445L));
    _jspx_dependants.put("jar:file:/C:/workspace/6.JspSpring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/JspServlet/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.net.URLDecoder");
    _jspx_imports_classes.add("kr.or.ddit.guestbook.vo.Product");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");


	request.setCharacterEncoding("UTF-8");

	//고유한 세션 내장 객체의 아이디를 가져옴
	String cartId= session.getId();
	
	
	String shipping_cartId = ""; 
	String shipping_name = ""; 
	String shipping_shippingDate = "";
	String shipping_country = "";
	String shipping_zipCode = "";
	String shipping_addressName = "";
	
	// 쿠키 객체의 쿠기 정보를 얻어옴
	Cookie cookies[] = request.getCookies();
	
	if(cookies != null){
		
		for(int i = 0; i<cookies.length; i++){
			
			Cookie thisCookie = cookies[i];
			String n = thisCookie.getName();
			
			if(n.equals("Shipping_cartId")){
				shipping_cartId = URLDecoder.decode(thisCookie.getValue(),"UTF-8");
			} 
			if(n.equals("Shipping_name")){
				shipping_name = URLDecoder.decode(thisCookie.getValue(),"UTF-8");
			} 
			if(n.equals("Shipping_shippingDate")){
				shipping_shippingDate = URLDecoder.decode(thisCookie.getValue(),"UTF-8");
			} 
			if(n.equals("Shipping_country")){
				shipping_country = URLDecoder.decode(thisCookie.getValue(),"UTF-8");
			} 
			if(n.equals("Shipping_zipCode")){
				shipping_zipCode = URLDecoder.decode(thisCookie.getValue(),"UTF-8");
			} 
			if(n.equals("Shipping_addressName")){
				shipping_addressName = URLDecoder.decode(thisCookie.getValue(),"UTF-8");
			} 
			
		}
	}


      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>orderConfirmation</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu.jsp", out, false);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"jumbotron\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<h1 class=\"display-3\"> 주문 정보 </h1>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"container col-8 alert alert-info\">\r\n");
      out.write("		<div class=\"text-center\">\r\n");
      out.write("			<h1>영수증</h1>\r\n");
      out.write("		</div>\r\n");
      out.write("		 <div class=\"row jusity-content-between\">\r\n");
      out.write("		 	<div class=\"col-4\" align=\"left\">\r\n");
      out.write("		 		<strong>배송 주소</strong>\r\n");
      out.write("		 		<br>\r\n");
      out.write("		 		<p>성명  ");
      out.print(shipping_name);
      out.write("</p>\r\n");
      out.write("		 		<p>우편번호  ");
      out.print(shipping_zipCode);
      out.write("</p>\r\n");
      out.write("		 		<p>주소  ");
      out.print(shipping_addressName);
      out.write('(');
      out.print(shipping_country );
      out.write(")</p>\r\n");
      out.write("		 	</div>\r\n");
      out.write("		 	<div class=\"col-4\" align=\"right\">\r\n");
      out.write("		 		<p> <em>배송일 ");
      out.print(shipping_shippingDate );
      out.write("</em> </p>\r\n");
      out.write("		 	</div>\r\n");
      out.write("		 	<div>\r\n");
      out.write("		 		<table class=\"table table-hover\">\r\n");
      out.write("		 			<tr>\r\n");
      out.write("		 				<th class=\"text-center\">상품</th>\r\n");
      out.write("		 				<th class=\"text-center\">#</th>\r\n");
      out.write("		 				<th class=\"text-center\">가격</th>\r\n");
      out.write("		 				<th class=\"text-center\">소계</th>\r\n");
      out.write("		 			</tr>\r\n");
      out.write("		 			\r\n");
      out.write("		 			");

		 				
		 				int sum = 0;
		 				//세션에 저장된 장바구니 정보를 얻어모
		 				ArrayList<Product> cartList =  (ArrayList<Product>)session.getAttribute("cartlist");
		 				
		 				if(cartList == null){
		 					cartList = new ArrayList<Product>();
		 				}
		 				//장바구니에 담긴 상품리스트를 하나씩 출력
		 				for(int i = 0; i<cartList.size(); i++){
							Product product = cartList.get(i);	
							// 총액 = 가격 * 수량
							int total = product.getUnitPrice() * product.getQuantity();
							// 총금액 산출(누적)
							sum += total;
					
      out.write("\r\n");
      out.write("					\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td class=\"text-center\"><em>");
      out.print(product.getPname());
      out.write("</em></td>\r\n");
      out.write("							<td class=\"text-center\">");
      out.print(product.getQuantity());
      out.write("</td>\r\n");
      out.write("							<td class=\"text-center\">");
      out.print(product.getUnitPrice());
      out.write("</td>\r\n");
      out.write("							<td class=\"text-center\"> ₩ ");
      out.print(total);
      out.write("</td>\r\n");
      out.write("						\r\n");
      out.write("						</tr>\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					");

		 				}
		 			
      out.write("\r\n");
      out.write("		 				<tr>\r\n");
      out.write("		 					<td> &nbsp; </td>\r\n");
      out.write("		 					<td> &nbsp; </td>\r\n");
      out.write("		 					<td class=\"text-right\"> <strong> 총액 </strong> </td>\r\n");
      out.write("		 					<td class=\"text-center text-danger\"> <strong> ");
      out.print(sum );
      out.write(" </strong> </td>\r\n");
      out.write("		 				</tr>\r\n");
      out.write("		 		</table>\r\n");
      out.write("		 		<a href=\"./shippingInfo.jsp?cartId=");
      out.print(shipping_cartId);
      out.write("\" class=\"btn btn-secondary\" role=\"button\">이전</a>\r\n");
      out.write("		 		<a href=\"./thankCustomer.jsp\" class=\"btn btn-success\" role=\"button\">주문 완료</a>\r\n");
      out.write("		 		<a href=\"./checkOutCancelled.jsp\" class=\"btn btn-secondary\" role=\"button\">취소</a>\r\n");
      out.write("		 	</div>\r\n");
      out.write("		 </div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
